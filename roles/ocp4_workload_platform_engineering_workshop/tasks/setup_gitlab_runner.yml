---

- name: Get gitlab  host
  set_fact:
    ocp4_workload_platform_engineering_workshop_gitlab_host: "gitlab-{{
      ocp4_workload_platform_engineering_workshop_gitlab_namespace }}.{{
      r_openshift_subdomain }}"

- name: Install GitLab Runner Operator
  block:
  - name: Install GitLab Runner Operator
    include_role:
      name: install_operator
    vars:
      install_operator_action: install
      install_operator_name: gitlab-runner-operator
      install_operator_namespace: openshift-operators
      install_operator_channel: stable
      install_operator_catalog: certified-operators
      install_operator_packagemanifest_name: gitlab-runner-operator
      install_operator_automatic_install_plan_approval: true
      install_operator_csv_nameprefix: gitlab-runner-operator


- name: Print _ocp4_workload_platform_engineering_workshop_gitlab_root_token
  ansible.builtin.debug:
    msg: "_ocp4_workload_platform_engineering_workshop_gitlab_root_token: {{ _ocp4_workload_platform_engineering_workshop_gitlab_root_token }}"


- name: Create GitLab runner Registration Token
  ansible.builtin.uri:
    url: https://{{ ocp4_workload_platform_engineering_workshop_gitlab_host }}/api/v4/runners/reset_registration_token
    method: POST
    return_content: true
    body_format: json
    headers:
      PRIVATE-TOKEN: " {{ _ocp4_workload_platform_engineering_workshop_gitlab_root_token }} "
    validate_certs: false
    status_code: [201]
  register: _github_runnersecret_result
  until: _github_runnersecret_result


- name: Print _github_runnersecret_result
  ansible.builtin.debug:
    msg: "_github_runnersecret_result: {{ _github_runnersecret_result | to_json}}"


- name: Get token from _github_runnersecret_result 
  ansible.builtin.set_fact:
    _github_runnersecret_token: "{{ _github_runnersecret_result | to_json | from_json | json_query(query) }}"
  vars:
    query: "json.token"


- name: Print _github_runnersecret_token
  ansible.builtin.debug:
    msg: "_github_runnersecret_token: {{ _github_runnersecret_token}}"


- name: CREATE gitlab-dev-runner-secret SECRET
  kubernetes.core.k8s:
    state: present
    definition: 
      apiVersion: v1
      kind: Secret
      type: Opaque
      metadata:
        name: "gitlab-dev-runner-secret"
        namespace: "{{ ocp4_workload_platform_engineering_workshop_gitlab_namespace }}"
      stringData:
        runner-registration-token: '{{ _github_runnersecret_token}}'
        runner-token: ''


- name: Create GitLab Runner instance
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'techdocs/gitlab-runner-techdocs.yml.j2' ) | from_yaml }}"




- name: Create CI/CD Variables
  ansible.builtin.uri:
    url: https://{{ ocp4_workload_platform_engineering_workshop_gitlab_host }}/api/v4/admin/ci/variables
    method: POST
    body_format: json
    body:
      "key": "{{ item.name }}"
      "variable_type": "env_var"
      "value": "{{ item.value }}"
      "protected": false
      "masked": false
      "raw": false
      "environment_scope": "*"
    headers:
      PRIVATE-TOKEN: " {{ _ocp4_workload_platform_engineering_workshop_gitlab_root_token }} "
    validate_certs: false
    status_code: [201]
  loop:
  - name: TECHDOCS_S3_BUCKET_NAME
    value: "{{ ocp4_workload_platform_engineering_workshop_s3_bucket_name }}"
  - name: AWS_ACCESS_KEY_ID
    value: "{{ ocp4_workload_platform_engineering_workshop_s3_bucket_aws_access_key_id }}"
  - name: AWS_SECRET_ACCESS_KEY
    value: "{{ ocp4_workload_platform_engineering_workshop_s3_bucket_aws_secret_access_key }}"
  - name: AWS_REGION
    value: "{{ ocp4_workload_platform_engineering_workshop_s3_bucket_region }}"
  - name: AWS_ENDPOINT
    value: "{{ ocp4_workload_platform_engineering_workshop_s3_bucket_endpoint }}"

