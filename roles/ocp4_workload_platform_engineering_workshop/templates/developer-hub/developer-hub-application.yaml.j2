---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ ocp4_workload_platform_engineering_workshop_rhdh_argo_application_name }}
  namespace: {{ ocp4_workload_platform_engineering_workshop_rhdh_argo_application_namespace }}
  finalizers:
    - resources-finalizer.argocd.argoproj.io/foreground
spec:
  destination:
    name: ""
    namespace: {{ ocp4_workload_platform_engineering_workshop_rhdh_namespace }}
    server: 'https://kubernetes.default.svc'
  project: default
  source:
    repoURL: {{ ocp4_workload_platform_engineering_workshop_rhdh_helm_repo }}
    path: {{ ocp4_workload_platform_engineering_workshop_rhdh_helm_repo_path }}
    targetRevision: {{ ocp4_workload_platform_engineering_workshop_rhdh_helm_repo_tag }}
    helm:
      values: |
        redhat-developer-hub-prereqs:
          nameOverride: backstage
          backstage:
            postgresql:
              password: {{ ocp4_workload_platform_engineering_workshop_rhdh_psql_password }}
        redhat-developer-hub:
          app:
            baseUrl: "https://backstage-{{ ocp4_workload_platform_engineering_workshop_rhdh_namespace }}.{{ r_openshift_subdomain }}"
          global:
            clusterRouterBase: {{ r_openshift_subdomain }}
            host: backstage-{{ ocp4_workload_platform_engineering_workshop_rhdh_namespace }}.{{ r_openshift_subdomain }}

            dynamic:
              includes:
                - dynamic-plugins.default.yaml
              plugins:
                - package: ./dynamic-plugins/dist/backstage-plugin-scaffolder-backend-module-gitlab-dynamic
                  disabled: false
                - disabled: false
                  package: ./dynamic-plugins/dist/backstage-plugin-techdocs-backend-dynamic
                - disabled: false
                  package: ./dynamic-plugins/dist/backstage-plugin-techdocs
                - disabled: false
                  package: ./dynamic-plugins/dist/backstage-plugin-tech-radar

          upstream:
            postgresql:
              auth:
                username: postgres
                database: backstage
                existingSecret: backstage-postgresql
                secretKeys:
                  userPasswordKey: postgres-password


            backstage:
              appConfig:
                auth:
                  environment: production
                  providers:
                    oauth2Proxy: {}
                backend:
                  baseUrl: "https://backstage-{{ ocp4_workload_platform_engineering_workshop_rhdh_namespace }}.{{ r_openshift_subdomain }}"
                  cors:
                    origin: "https://backstage-{{ ocp4_workload_platform_engineering_workshop_rhdh_namespace }}.{{ r_openshift_subdomain }}"
                signInPage: oauth2Proxy
                integrations:
                  gitlab:
                    - apiBaseUrl: https://{{ ocp4_workload_platform_engineering_workshop_gitlab_config_host }}/api/v4
                      baseUrl: https://{{ ocp4_workload_platform_engineering_workshop_gitlab_config_host }}
                      host: {{ ocp4_workload_platform_engineering_workshop_gitlab_config_host }}
                      token: {{ _ocp4_workload_platform_engineering_workshop_gitlab_root_token }}
                catalog:
                  rules:
                    - allow: [Component, System, API, Resource, Location, Template]
                  locations:
{% for location in ocp4_workload_platform_engineering_workshop_rhdh_locations %}
                    - target: https://{{ ocp4_workload_platform_engineering_workshop_gitlab_config_host }}/{{ location.group }}/{{ location.project }}/blob/{{ location.branch }}/{{ location.file }}
                      type: url
                      rules:
                        - allow: [{{ location.rules.allow }}]
{% endfor %}
                techdocs:
                  builder: external
                  generator:
                    runIn: local
                  publisher:
                    awsS3:
                      bucketName: {{ ocp4_workload_platform_engineering_workshop_s3_bucket_name }}
                      credentials:
                        accessKeyId: {{ ocp4_workload_platform_engineering_workshop_s3_bucket_aws_access_key_id }}
                        secretAccessKey: {{ ocp4_workload_platform_engineering_workshop_s3_bucket_aws_secret_access_key }}
                      endpoint: {{ ocp4_workload_platform_engineering_workshop_s3_bucket_endpoint }}
                      region: {{ ocp4_workload_platform_engineering_workshop_s3_bucket_region }}
                      s3ForcePathStyle: true
                    type: awsS3

              extraContainers:
                - name: oauth2-proxy
                  env:
                    - name: OAUTH2_PROXY_CLIENT_ID
                      value: {{ ocp4_workload_platform_engineering_workshop_rhbk_realm_backstage_name }}
                    - name: OAUTH2_PROXY_CLIENT_SECRET
                      value: {{ ocp4_workload_platform_engineering_workshop_rhbk_client_backstage_secret }}
                    - name: OAUTH2_PROXY_COOKIE_SECRET
                      value: "{{ '{{ randAlpha 32 | lower | b64enc }}' }}"
                    - name: OAUTH2_PROXY_OIDC_ISSUER_URL
                      value: https://{{ ocp4_workload_platform_engineering_workshop_rhbk_host }}.{{ r_openshift_subdomain }}/realms/{{ ocp4_workload_platform_engineering_workshop_rhbk_realm_backstage_name }}
                    - name: OAUTH2_PROXY_SSL_INSECURE_SKIP_VERIFY
                      value: 'true'
                  ports:
                    - name: oauth2-proxy
                      containerPort: 4180
                      protocol: TCP
                  imagePullPolicy: IfNotPresent
                  image: 'quay.io/oauth2-proxy/oauth2-proxy:latest'
                  args:
                    - '--provider=oidc'
                    - '--email-domain=*'
                    - '--upstream=http://localhost:7007'
                    - '--http-address=0.0.0.0:4180'
                    - '--skip-provider-button'
                    - '--insecure-oidc-allow-unverified-email=true'
            service:
              ports:
                backend: 4180
                targetPort: oauth2-proxy
          route:
            host: backstage-{{ ocp4_workload_platform_engineering_workshop_rhdh_namespace }}.{{ r_openshift_subdomain }}
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    retry:
      backoff:
        duration: 10s
        factor: 2
        maxDuration: 10m
      limit: 15
    syncOptions:
      - CreateNamespace=true
      - RespectIgnoreDifferences=true
      - ApplyOutOfSyncOnly=true
